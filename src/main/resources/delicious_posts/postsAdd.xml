<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="addNewPost" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="url" description="required — The url of the item"/>
    <parameter name="description" description="required — The description of the item."/>
    <parameter name="extended" description="optional — Notes for the item."/>
    <parameter name="tags" description="optional — Tags for the item (comma delimited)"/>
    <parameter name="dt" description="{CCYY-MM-DDThh:mm:ssZ} optional — Datestamp of the item"/>
    <parameter name="replace"
               description="{no} optional — Don’t replace post if given url has already been posted"/>
    <parameter name="shared" description="{no} optional — Make the item private"/>
    <sequence>
        <property name="uri.var.inputUrl" expression="$func:url" type="STRING"/>
        <property name="uri.var.inputDescription" expression="$func:description" type="STRING"/>
        <property name="uri.var.inputExtended" expression="$func:extended" type="STRING"/>
        <property name="uri.var.inputTags" expression="$func:tags" type="STRING"/>
        <property name="uri.var.inputDt" expression="$func:dt" type="STRING"/>
        <property name="uri.var.inputReplace" expression="$func:replace" type="STRING"/>
        <property name="uri.var.inputShare" expression="$func:shared" type="STRING"/>
        <property name="uri.var.apiParameters"
                  expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;url=',get-property('uri.var.inputUrl'),'&amp;description=',get-property('uri.var.inputDescription'))"/>
        <filter
                xpath="(not(get-property('uri.var.inputExtended') = '' or (not(string(get-property('uri.var.inputExtended'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;extended=',get-property('uri.var.inputExtended'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.inputTags') = '' or (not(string(get-property('uri.var.inputTags'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;tags=',get-property('uri.var.inputTags'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.inputDt') = '' or (not(string(get-property('uri.var.inputDt'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;dt=',get-property('uri.var.inputDt'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.inputReplace') = '' or (not(string(get-property('uri.var.inputReplace'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;replace=',get-property('uri.var.inputReplace'))"/>
            </then>
        </filter>
        <filter
                xpath="(not(get-property('uri.var.inputShare') = '' or (not(string(get-property('uri.var.inputShare'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'&amp;share=',get-property('uri.var.inputShare'))"/>
            </then>
        </filter>
        <property name="Accept-Encoding" value="deflate" scope="transport"/>
        <call>
            <endpoint>
                <http method="GET"
                      uri-template="{uri.var.delicious.url}/v1/posts/add?{+uri.var.apiParameters}"/>
            </endpoint>
        </call>
    </sequence>
</template>